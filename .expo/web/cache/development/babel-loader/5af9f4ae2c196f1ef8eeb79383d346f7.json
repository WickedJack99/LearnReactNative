{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport { render } from 'react-dom';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      textValue: 'Change me',\n      button: _jsx(Button, {\n        title: \"Change Text\",\n        onPress: _this.onPress\n      })\n    };\n\n    _this.onPress = function () {\n      _this.setState({\n        textValue: 'THE NEW TEXT GOES HERE'\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return _jsxs(View, {\n        style: {\n          paddingTop: 25\n        },\n        children: [_jsx(Text, {\n          children: this.state.textValue\n        }), \"this.state.button\"]\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  indexView: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","render","React","Component","App","state","textValue","button","onPress","setState","paddingTop","styles","StyleSheet","create","indexView","flex","backgroundColor","alignItems","justifyContent"],"sources":["/home/soot/Documents/LearnReactNative/App.js"],"sourcesContent":["\nimport { StatusBar } from 'expo-status-bar';\nimport { render } from 'react-dom';\nimport React, { Component } from 'react'\nimport { StyleSheet, Text, View, Image, SafeAreaView, Button } from 'react-native';\n\nexport default class App extends Component {\n  state = {\n    textValue: 'Change me',\n    button: <Button title=\"Change Text\" onPress={this.onPress} />\n  }\n\n  onPress = () => {\n    this.setState({\n      textValue: 'THE NEW TEXT GOES HERE'\n    })\n  }\n\n  render() {\n    return (\n      <View style={{paddingTop: 25}}>\n        \n        <Text>{this.state.textValue}</Text>\n        this.state.button\n      </View>\n    )\n  }\n}\n  //console.log(\"App executed\"); //use console logs only for development because they slow down program execution.\n\n  //const handlePress = () => { indexVar = !indexVar;};\n  //let indexVar = true;\n\n  //function myFunction(x1,x2) {\n    //return x1*x2;\n  //}\n\n  //if(indexVar == true) return (\n    //Like div\n    //ios: View -> UIView\n    //Self closing syntax to make code cleaner: instead of <Image></Image> use <Image />\n    //Use static images type: require(\"./assets/icon.png\") in source\n    //https://i.picsum.photos/id/3/200/300.jpg?hmac=o1-38H2y96Nm7qbRf8Aua54lF97OFQSHR41ATNErqFc\n    //<SafeAreaView style={styles.indexView}>\n      //<Text onPress={sess}>Hello World!</Text>\n      \n      //<Image source={{\n        //width: 200,\n        //height: 300,\n        //uri: \"https://i.picsum.photos/id/3/200/300.jpg?hmac=o1-38H2y96Nm7qbRf8Aua54lF97OFQSHR41ATNErqFc\"}}/>\n      //<StatusBar style=\"auto\" />\n      //<View>\n        //<Text>Test</Text>\n      //</View>\n    //</SafeAreaView>\n  //);\n//}\n\n//Creating an object \"styles\"\nconst styles = StyleSheet.create({\n  //Container including all styles of object \"styles\".\n  indexView: {\n    //Container is flexible, meaning it fills horizontically and vertically the free space\n    flex: 1,\n    //Background-color of container is white(#fff)\n    backgroundColor: '#fff',\n    //Content positioning at container\n    alignItems: 'center',\n    justifyContent: 'center',\n\n  },\n});\n"],"mappings":";;;;;;;;;;AACA,SAASA,SAAT,QAA0B,iBAA1B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;;IAGqBC,G;;;;;;;;;;;;;;;UACnBC,K,GAAQ;MACNC,SAAS,EAAE,WADL;MAENC,MAAM,EAAE,KAAC,MAAD;QAAQ,KAAK,EAAC,aAAd;QAA4B,OAAO,EAAE,MAAKC;MAA1C;IAFF,C;;UAKRA,O,GAAU,YAAM;MACd,MAAKC,QAAL,CAAc;QACZH,SAAS,EAAE;MADC,CAAd;IAGD,C;;;;;;;WAED,kBAAS;MACP,OACE,MAAC,IAAD;QAAM,KAAK,EAAE;UAACI,UAAU,EAAE;QAAb,CAAb;QAAA,WAEE,KAAC,IAAD;UAAA,UAAO,KAAKL,KAAL,CAAWC;QAAlB,EAFF;MAAA,EADF;IAOD;;;;EApB8BH,S;;SAAZC,G;AAqDrB,IAAMO,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;EAE/BC,SAAS,EAAE;IAETC,IAAI,EAAE,CAFG;IAITC,eAAe,EAAE,MAJR;IAMTC,UAAU,EAAE,QANH;IAOTC,cAAc,EAAE;EAPP;AAFoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}