//Prerequisites for development with React Native on Linux
1. Download node.js minimum version 12
1.1.1 sudo apt update
1.1.2 sudo apt -y upgrade
1.1.3 sudo apt update
1.1.4 sudo apt -y install curl dirmngr apt-transport-https lsb-release ca-certificates
1.1.5 curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
1.1.6 sudo apt -y install nodejs
1.1.7 node -v
1.1.8 node.js should now be 12 or higher
2. Download npm
2.1.1 sudo apt install npm
2.1.2 sudo npm i -g expo-cli
3. Download Expo Go on your smartphone

//Create new project
1. Create Project: Enter "expo init <Projectname>" at terminal.
2. Choose blank and wait for setup to finish
3. Go to location <Projectname> using "cd"
4. Open project at VSCode using "code ."

//Test project
1. Open build-in terminal
2. Enter "npm start"
3.1 Connect smartphone via USB with PC
3.1.1 Scan QR-code with smartphone connected, opens Expo Go
3.2 Choose option from terminal

//Debugging code
1. Open build-in terminal
2. Enter "npm start"
3. Enter "w" for web-execution
4. Ctrl+Shift+I to open developer-tools
5. Click on third tab called "Debugger"
6. Select on the right side under "Breakpoints": "Pause on exceptions" and "Pause on caught exceptions"
7. Click on left side of linenumbers of code to set breakpoints
8.1 Use F10 to step over codelines
8.2 Use F11 to step into a function
8.3 Use Shift+F11 to step out of a function

//Publish Expo Project for testing
1. Open build-in terminal
2. Enter "npm start"
3. Enter "d" to show developer-tools
4. Click on left side on "Publish or republish project..."
5. Enter details of project you want to publish
6. Click on "Publish project"
7. Go back to build-in console at VSCode and select "Log in with an existing Expo account"
8. Enter your Expo-Account Details
9. Go back to webbrowser and click on the provided link to see the project-website

//React Native Features
1. If you have a device connected, changes are instantly applied after saving.
2. Press Ctrl + d to open developer menu (if using xcode on mac).
2.1 On physical device shake it to bring up developer menu.

//Core components and APIs
1.  View
1.1 Most basic and fundamental component of the UI, kind of like a <div> used for grouping or layouting children.

2.  SafeAreaView (iOS only)
2.1 Like View but doesn't take space under nodge of phones.

3.  Text
3.1 Second most fundamental component for displaying text. Always wrap text with <Text></Text> component.
3.2 Most important properties:  1. numberOfLines: If we set this and extend our text over the line, it gets cut.
                                2. onPress:       Can be set to a function, which will be executed by clicking on the text.

4.  Image
4.1 For displaying images.
4.2 Most important properties:  1. blurRadius: Blur radius of blur filter added to the image.
                                2. loadingIndicaterSource: similar to source but a static image will be shown while network image gets  
                                   downloaded.
                                3. resizeMode: review API page on reactnative.dev

5. Touchables

4. Button
6. Alert

//Sources
1. YouTube: React Native Tutorial for Beginners - Build a React Native App by Programming with Mosh
2. reactnative.dev Tab: API
3. 